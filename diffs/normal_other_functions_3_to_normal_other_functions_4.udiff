--- chatservers/normal_other_functions_3.py	2014-06-07 11:00:37.000000000 -0500
+++ chatservers/normal_other_functions_4.py	2014-06-07 13:47:23.000000000 -0500
@@ -82,24 +82,32 @@
     else:
         namespace.u('sr', v)
 
+def listen_socket():
+    namespace.s['l.listen'](5)
+
+def filter_namespace_ro_attrib():
+    return [s for s in namespace.so if s in namespace.so]
+
+def close_socket():
+    namespace.s['l.close']()
+
 def main(port):
+    import_to_namespace()
+
     namespace.sw = do_select_routine
+    namespace.l = namespace.s['socket.socket'](
+        namespace.s['socket.AF_INET'],
+        namespace.s['socket.SOCK_STREAM']
+    )
+    namespace.ro = filter_namespace_ro_attrib
+
+    def bind_socket():
+        namespace.s['l.bind'](('', port))
 
     functions_to_run = [
-        import_to_namespace,
         add_signal_handlers,
-        lambda: (
-            'l',
-            namespace.s['socket.socket'](
-                namespace.s['socket.AF_INET'],
-                namespace.s['socket.SOCK_STREAM']
-            )
-        ),
-        lambda: namespace.s['l.bind'](('', port)),
-        lambda: namespace.s['l.listen'](5),
-        lambda: (
-            'ro', lambda: filter(lambda s: s in namespace.nn,  namespace.so)
-        ),
+        bind_socket,
+        listen_socket,
         lambda: namespace.update(
             si=(lambda o: o.__setitem__),
             di=(lambda o: o.__delitem__),
@@ -321,7 +329,7 @@
             ),
             iter(lambda: bool(namespace.so), False)
         ),
-        lambda: namespace.s['l.' 'close']()
+        close_socket
     ]
     for func in functions_to_run:
         result = func()
